package in.nic.cmf.businessflow

import java.util.List;
import java.util.ArrayList;
import java.util.HashMap;
import in.nic.cmf.exceptions.GenericException;
import org.json.JSONException;
import net.sf.json.JSONObject;
import in.nic.cmf.convertors.FormatFlatten;
import in.nic.cmf.convertors.FormatXml;
import in.nic.cmf.convertors.FormatJson;


function List<String> convertToList(String strContent) {
  List<String> contentList = new ArrayList<String>();  
  String[] splitContent = strContent.split(",");   
  for(String s:splitContent){ contentList.add(s);} 
  return contentList; 
    }



 function String outw(HashMap workflow){    	
  
         JSONObject json = (JSONObject) FormatJson.getInstance().out(workflow);
         return json.toString();       
      
    }

    function HashMap<String, String> inw(String workflow){

        HashMap<String, String> f = new HashMap<String, String>();

        FormatFlatten.getInstanceOf()
                .flatten(
                        (HashMap<String, Object>) FormatJson.getInstance().in(
                                workflow), f);

        return f;
    }
    function boolean isAuthorisedUser(String authusername, String assignedusers) {

       
        return convertToList(assignedusers).contains(authusername.toLowerCase());
  }
        
 function boolean isAuthorisedRole(String aclrole, String assignedroles) {
                
                return convertToList(assignedroles).contains(aclrole.toLowerCase());
        }
    
    function String getCurrentUser(HashMap usercontext){
		return (String)usercontext.get("authusername");
	}
	
	#foreach($eachRule in $map)

    $eachRule.get('rulename')
	$eachRule.get("salience")
	when	
	map:HashMap($eachRule.get("when"));
	
	then
		
	System.out.println("i am inside $eachRule.get('rulename') ");
	
	#set($then = $eachRule.get("then"))	
	#if($then.containsKey("nextstage"))
	map.put('Stage','$then.get("nextstage")');		
	#end
	#if($then.containsKey("currentuser"))
	map.put('CurrentUser',$then.get("currentuser"));
	#end
	#if($then.containsKey("nextstatus"))
	map.put('Status','$then.get("nextstatus")');		
	#end
	#if($then.containsKey("nextpossactions"))
	$then.get("nextpossactions");
	#end
	
	#if($eachRule.containsKey("halt"))
	$eachRule.get("halt");
	#end
	end
    #end

	rule 'Empty Rule'
	when eval(1==1)
		
	then
	throw new GenericException("ERR-BF-0009");
	
	end
	