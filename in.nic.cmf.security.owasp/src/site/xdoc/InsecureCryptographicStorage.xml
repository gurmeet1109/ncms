<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <author>Ulaganathan Ramesh</author>
        <title>OWASP - Insecure Cryptographic Storage</title>
    </properties>
    <meta name="keyword" content="monitoring, java"/>
    <body>
        <section name="Definition">
       <p>Insecure cryptographic storage occurs when an application doesn’t securely encrypt it’s sensitive data when it is stored into a database. This definition is similar to the picture above, recursive.</p>

<p>Simply stated, insecure cryptographic storage occurs when one of following happens:</p>
<ol>
<li><strong>The developers don’t encrypt the data that is being stored in the database.</strong></li>
<li>The developers do encrypt the data being stored in the database, but they rely on encryption methods they have developed. (Also known as home-grown cryptography)</li>
</ol>
<p>After reading these two points you may say, “only an&nbsp;<em>idiot</em> wouldn’t encrypt sensitive data being stored in the database.” I refer you to number two in the list above.</p>
<p>If you think you are smart enough to write your own cryptographic algorithms, you my friend, are the&nbsp;<em>idiot</em>.</p>

<p>The main business concern with not encrypting sensitive data is that it can lead to confidentiality loss. All companies are concerned with unauthorized individuals viewing their sensitive data. In addition, encrypting sensitive data is be a regulatory compliance. </p>
  </section>
  <section name="Sample Attack">
 <p>Here is a simplified example. Selecting the users table from a database we are returned the following:</p>
<p><code>&gt; select * from users;</code></p>
<table border="1">
<tbody>
<tr>
<th>id</th>

<th>username</th>
<th>password</th>
</tr>
<tr>
<td>2</td>
<td>brett</td>
<td>5f4dcc3b5aa765d61d8327deb882cf99</td>
</tr>
<tr>
<td>2</td>
<td>dan</td>

<td>3c3662bcb661d6de679c636744c66b62</td>
</tr>
</tbody>
</table>
<p>The passwords in these table are 32 characters long. Could these passwords be MD5 hashes?</p>
<p>As with all hashing algorithms, MD5 hashes can’t be reversed. However, they can be pre-computed. Using a&nbsp;<a href="http://hashcrack.com/indx.php" target="_blank">hash table lookup</a> we can identify what the password is before it was ran through the MD5 hashing algorithm.</p>
<p>After inserting<em> </em><em>5f4dcc3b5aa765d61d8327deb882cf99</em> into the online form the resulting password is returned. In this example, the password is “password.”</p>

        </section>
        <section name="How to prevent?">
	<p>If the data is sensitive and stored it NEEDS to be encrypted. Examples of items that are considered to be sensitive can include:</p>
	<ul>
	<li>Credit Cards</li>
	<li>User Names</li>
	<li>Passwords</li>
	<li>User data</li>
	</ul>
	<p>There are other things to keep in mind when making sure you securely store information. This includes not creating your own cryptographic algorithms. No matter how smart you or your peers think you are&nbsp;<strong>DO NOT attempt to invent a new encryption algorithm</strong>. Leave this work to the experts.</p>

	<p>Ensure that the data stored is not easy to decrypt. This can usually be averted by not using known weak algorithms such as RC3, RC4,&nbsp;<a href="http://eprint.iacr.org/2004/199.pdf">MD5</a> and&nbsp;<a href="http://en.epochtimes.com/news/7-1-11/50336.html">SHA-1</a>.</p>
	<p>If you are using asymmetric key encryption make sure to store your private keys carefully. If an attacker gets hold of the private key, you might as well not encrypt the data in the first place.</p>
        </section>
        <section name="Available APIs">
         <p>
<a href="apidocs/in/nic/cmf/security/owasp/InsecureCryptograpicStorage.html">Insecure Cryptographic Storage</a>
	 </p>
        </section>
    </body>
</document>
